name: Build & Release · Vote System (Win + macOS)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: true
        default: 'venv'
        type: choice
        options:
          - venv
          - pyinstaller

permissions:
  contents: write

#──────────────────────────────────────────────────
jobs:
  pre:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

#──────────────────────────────────────────────────
# WINDOWS: VENV 방식
  win-venv:
    if: github.event_name == 'push' || github.event.inputs.build_mode == 'venv'
    needs: pre
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build Windows (venv)
        shell: pwsh
        run: |
          $DIST = 'vote_system_windows'
          $VENV_DIR = 'venv-build'
          $ZIP = 'vote_system_windows_venv.zip'
          python -m venv $VENV_DIR
          ."$VENV_DIR/Scripts/Activate.ps1"
          pip install -U pip
          pip install flask waitress python-dotenv PyQt5 watchdog requests pillow qrcode netifaces
          Remove-Item -Recurse -Force $DIST -ErrorAction SilentlyContinue
          New-Item -ItemType Directory $DIST | Out-Null
          Copy-Item launcher.py,server.py -Destination $DIST
          Copy-Item static,templates -Destination $DIST -Recurse
          Copy-Item $VENV_DIR -Destination $DIST -Recurse
          @'
          ADMIN_PASSWORD=chairperson113@
          STATIC_SERVER_IP=165.132.176.34
          '@ | Set-Content -Encoding UTF8 -NoNewline "$DIST\.env"
          @"
          @echo off
          cd /d ""%%~dp0""
          set ""PYTHON_EXE=%%~dp0$VENV_DIR\Scripts\python.exe""
          set ""SCRIPT=launcher.py""

          if not exist ""%%PYTHON_EXE%%"" (
              echo ❌ Python 실행 파일을 찾을 수 없습니다: ""%%PYTHON_EXE%%""
              pause & exit /b 1
          )

          ""%%PYTHON_EXE%%"" ""%%SCRIPT%%""
          echo(
          echo 프로그램 종료 (코드=%%ERRORLEVEL%%)
          pause
          "@ | Out-File "$DIST\vote_system.bat" -Encoding OEM
          Compress-Archive -Path "$DIST\*" -DestinationPath $ZIP -Force
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_windows_venv.zip
          files: vote_system_windows_venv.zip

#──────────────────────────────────────────────────
# WINDOWS: PyInstaller
  win-pyinstaller:
    if: github.event.inputs.build_mode == 'pyinstaller'
    needs: pre
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build Windows (PyInstaller)
        shell: pwsh
        run: |
          $DIST = 'vote_system_windows'
          $ZIP  = 'vote_system_windows_pyinstaller.zip'
          python -m venv venv
          .\venv\Scripts\Activate.ps1
          pip install -U pip
          pip install pyinstaller flask waitress python-dotenv PyQt5 watchdog requests pillow qrcode netifaces
          pyinstaller launcher.py --noconfirm --onefile `
            --add-data "templates;templates" `
            --add-data "static;static" `
            --distpath dist --workpath build --log-level=WARN
          Remove-Item -Recurse -Force $DIST -ErrorAction SilentlyContinue
          New-Item -ItemType Directory $DIST | Out-Null
          Copy-Item dist\launcher.exe -Destination "$DIST\vote_system.exe"
          Copy-Item server.py -Destination $DIST
          Copy-Item static,templates -Destination $DIST -Recurse
          @'
          ADMIN_PASSWORD=chairperson113@
          STATIC_SERVER_IP=165.132.176.34
          '@ | Set-Content -Encoding UTF8 -NoNewline "$DIST\.env"
          Compress-Archive -Path "$DIST\*" -DestinationPath $ZIP -Force
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_windows_pyinstaller.zip
          files: vote_system_windows_pyinstaller.zip

#──────────────────────────────────────────────────
# macOS: VENV 방식
  mac-venv:
    if: github.event_name == 'push' || github.event.inputs.build_mode == 'venv'
    needs: pre
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build macOS (venv)
        run: |
          DIST="vote_system_mac"
          VENV_DIR="venv"
          ZIP="vote_system_mac_venv.zip"
          python3 -m venv "$VENV_DIR"
          source "$VENV_DIR/bin/activate"
          pip install -U pip
          pip install flask gunicorn gevent PyQt5 python-dotenv watchdog requests pillow qrcode netifaces
          rm -rf "$DIST"
          mkdir "$DIST"
          cp launcher.py server.py "$DIST"
          cp -R static templates "$DIST"
          cp -R "$VENV_DIR" "$DIST/$VENV_DIR"
          echo "ADMIN_PASSWORD=chairperson113@" > "$DIST/.env"
          echo "STATIC_SERVER_IP=165.132.176.34" >> "$DIST/.env"
          mkdir -p "$DIST/VoteSystemLauncher.app/Contents/MacOS"
          cat > "$DIST/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher" <<'SH'
          #!/bin/bash
          cd "$(dirname "$0")"/../../
          source venv/bin/activate
          python3 launcher.py
          SH
          chmod +x "$DIST/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher"
          cat > "$DIST/VoteSystemLauncher.app/Contents/Info.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>       <string>VoteSystemLauncher</string>
            <key>CFBundleExecutable</key> <string>VoteSystemLauncher</string>
            <key>CFBundleIdentifier</key> <string>com.example.votesystem</string>
            <key>CFBundleVersion</key>    <string>1.0</string>
          </dict>
          </plist>
          PLIST
          (cd "$DIST" && zip -r "../$ZIP" .)
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_mac_venv.zip
          files: vote_system_mac_venv.zip

#──────────────────────────────────────────────────
# macOS: PyInstaller
  mac-pyinstaller:
    if: github.event.inputs.build_mode == 'pyinstaller'
    needs: pre
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build macOS (PyInstaller)
        run: |
          DIST="vote_system_mac"
          ZIP="vote_system_mac_pyinstaller.zip"
          python3 -m venv venv
          source venv/bin/activate
          pip install -U pip
          pip install pyinstaller flask gunicorn gevent PyQt5 python-dotenv watchdog requests pillow qrcode netifaces
          pyinstaller launcher.py --noconfirm --onefile \
            --add-data "templates:templates" \
            --add-data "static:static" \
            --distpath dist --workpath build --log-level=WARN
          mkdir -p "$DIST"
          cp dist/launcher "$DIST/vote_system_mac"
          cp server.py "$DIST"
          cp -R static templates "$DIST"
          echo "ADMIN_PASSWORD=chairperson113@" > "$DIST/.env"
          echo "STATIC_SERVER_IP=165.132.176.34" >> "$DIST/.env"
          (cd "$DIST" && zip -r "../$ZIP" .)
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_mac_pyinstaller.zip
          files: vote_system_mac_pyinstaller.zip
