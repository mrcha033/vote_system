name: Build & Release · Vote System (Win + macOS)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: true
        default: 'venv'
        type: choice
        options:
          - venv
          - pyinstaller

permissions:
  contents: write

#──────────────────────────────────────────────────
jobs:
  pre:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

#──────────────────────────────────────────────────
# WINDOWS: PyInstaller
  win:
    if: github.event_name == 'push'
    needs: pre
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build Windows (PyInstaller)
        shell: pwsh
        run: |
          $DIST = 'vote_system_windows'
          $ZIP  = 'vote_system_windows_pyinstaller.zip'
          python -m venv venv
          .\venv\Scripts\Activate.ps1
          pip install -U pip
          pip install pyinstaller flask waitress python-dotenv PyQt5 watchdog requests pillow qrcode netifaces
          pyinstaller launcher.py --noconfirm --onefile --uac-admin`
            --add-data "templates;templates" `
            --add-data "static;static" `
            --distpath dist --workpath build --log-level=WARN
          Remove-Item -Recurse -Force $DIST -ErrorAction SilentlyContinue
          New-Item -ItemType Directory $DIST | Out-Null
          Copy-Item dist\launcher.exe -Destination "$DIST\vote_system.exe"
          Copy-Item server.py -Destination $DIST
          Copy-Item static,templates -Destination $DIST -Recurse
          @'
          ADMIN_PASSWORD=chairperson113@
          STATIC_SERVER_IP=165.132.176.34
          '@ | Set-Content -Encoding UTF8 -NoNewline "$DIST\.env"
          Compress-Archive -Path "$DIST\*" -DestinationPath $ZIP -Force
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_windows_pyinstaller.zip
          files: vote_system_windows_pyinstaller.zip

#──────────────────────────────────────────────────
# macOS: VENV 방식
  mac:
    if: github.event_name == 'push'
    needs: pre
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build macOS (PyInstaller)
        run: |
          DIST="vote_system_mac"
          ZIP="vote_system_mac_pyinstaller.zip"
          python3 -m venv venv
          source venv/bin/activate
          pip install -U pip
          pip install pyinstaller flask gunicorn gevent PyQt5 python-dotenv watchdog requests pillow qrcode netifaces
          pyinstaller launcher.py --noconfirm --onefile \
            --add-data "templates:templates" \
            --add-data "static:static" \
            --distpath dist --workpath build --log-level=WARN
          mkdir -p "$DIST"
          cp dist/launcher "$DIST/vote_system_mac"
          cp server.py "$DIST"
          cp -R static templates "$DIST"
          echo "ADMIN_PASSWORD=chairperson113@" > "$DIST/.env"
          echo "STATIC_SERVER_IP=165.132.176.34" >> "$DIST/.env"
          (cd "$DIST" && zip -r "../$ZIP" .)
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_mac_pyinstaller.zip
          files: vote_system_mac_pyinstaller.zip
