name: Build & Release · Vote System (Win + macOS)

on:
  push:
    tags:
      - 'v*.*.*'          # 예: v1.2.3
  workflow_dispatch:

#──────────────────────────────────────────────────
#  공통 – 릴리스 태그 이름 추출
jobs:
  pre:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

#──────────────────────────────────────────────────
#  WINDOWS ZIP
  win-zip:
    needs: pre
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build Windows package
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'

          #─ 설정값
          $DIST     = 'vote_system_windows'
          $VENV_DIR = 'venv-build'
          $ZIP      = 'vote_system_windows.zip'

          #─ 가상환경 ──────────────────────────────
          python -m venv $VENV_DIR
          ."$VENV_DIR/Scripts/Activate.ps1"
          pip install -U pip
          pip install flask waitress python-dotenv PyQt5 watchdog requests pillow qrcode netifaces

          #─ 배포 폴더 ─────────────────────────────
          Remove-Item -Recurse -Force $DIST -ErrorAction SilentlyContinue
          New-Item -ItemType Directory $DIST           | Out-Null
          Copy-Item launcher.py,server.py              -Destination $DIST
          Copy-Item static,templates                   -Destination $DIST -Recurse
          Copy-Item $VENV_DIR                          -Destination $DIST -Recurse

          #─ .env 생성
          @'
          ADMIN_PASSWORD=changeme123
          STATIC_SERVER_IP=165.132.176.34
          '@ | Set-Content -Encoding UTF8 -NoNewline "$DIST/.env"

          #─ 실행 배치
          $bat = @"
          @echo off
          cd /d %~dp0
          %~dp0$VENV_DIR\Scripts\python.exe launcher.py
          echo.
          echo 프로그램 종료 (코드=%ERRORLEVEL%)
          pause
          "@
          $bat | Out-File "$DIST/vote_system.bat" -Encoding OEM

          #─ ZIP 압축
          Remove-Item $ZIP -ErrorAction SilentlyContinue
          Compress-Archive -Path "$DIST\*" -DestinationPath $ZIP -Force

      - name: Upload Windows asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_windows.zip
          files: vote_system_windows.zip

#──────────────────────────────────────────────────
#  macOS ZIP
  mac-zip:
    needs: pre
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build macOS package
        run: |
          set -e

          DIST="vote_system_mac"
          VENV_DIR="venv"
          ZIP="vote_system_mac.zip"

          python3 -m venv "$VENV_DIR"
          source "$VENV_DIR/bin/activate"
          pip install -U pip
          pip install flask gunicorn gevent PyQt5 python-dotenv watchdog requests pillow qrcode netifaces

          rm -rf "$DIST"
          mkdir  "$DIST"
          cp launcher.py server.py "$DIST"
          cp -R static      "$DIST/static"
          cp -R templates   "$DIST/templates"
          cp -R "$VENV_DIR" "$DIST/$VENV_DIR"

          cat > "$DIST/.env" <<EOF
          ADMIN_PASSWORD=changeme123
          EOF

          # 간단한 .app 런처
          mkdir -p "$DIST/VoteSystemLauncher.app/Contents/MacOS"
          cat > "$DIST/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher" <<'SH'
          #!/bin/bash
          cd "$(dirname "$0")"/../../
          source venv/bin/activate
          python3 launcher.py
          SH
          chmod +x "$DIST/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher"

          # Info.plist
          cat > "$DIST/VoteSystemLauncher.app/Contents/Info.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>       <string>VoteSystemLauncher</string>
            <key>CFBundleExecutable</key> <string>VoteSystemLauncher</string>
            <key>CFBundleIdentifier</key> <string>com.example.votesystem</string>
            <key>CFBundleVersion</key>    <string>1.0</string>
          </dict>
          </plist>
          PLIST

          # ZIP 압축
          rm -f "$ZIP"
          (cd "$DIST" && zip -r "../$ZIP" .)

      - name: Upload macOS asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.pre.outputs.tag }}
          name: vote_system_mac.zip
          files: vote_system_mac.zip
