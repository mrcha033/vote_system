name: Build and Release Vote System (Windows & macOS)

on:
  push:
    tags:
      - 'v*.*.*'   # ì˜ˆ: v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Get current tag
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  build-windows:
    runs-on: windows-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build Windows .zip
        run: |
          python -m venv venv
          venv\Scripts\activate && pip install --upgrade pip
          venv\Scripts\activate && pip install flask gunicorn gevent PyQt5 python-dotenv watchdog requests pillow qrcode netifaces

          mkdir vote_system_windows
          copy launcher.py vote_system_windows
          copy server.py vote_system_windows
          echo ADMIN_PASSWORD=changeme123 > vote_system_windows\.env
          xcopy static vote_system_windows\static /E /I /Y
          xcopy templates vote_system_windows\templates /E /I /Y
          xcopy venv vote_system_windows\venv /E /I /Y
          echo @echo off > vote_system_windows\run_launcher.bat
          echo cd /d %%~dp0 >> vote_system_windows\run_launcher.bat
          echo call venv\Scripts\activate >> vote_system_windows\run_launcher.bat
          echo python launcher.py >> vote_system_windows\run_launcher.bat
          powershell Compress-Archive -Path vote_system_windows -DestinationPath vote_system_windows.zip

      - name: Upload Release Asset (Windows)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.tag_name }}
          name: vote_system_windows.zip
          files: vote_system_windows.zip

  build-macos:
    runs-on: macos-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build macOS .zip
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install flask gunicorn gevent PyQt5 python-dotenv watchdog requests pillow qrcode netifaces

          mkdir vote_system_mac
          cp launcher.py server.py vote_system_mac
          cp -R static vote_system_mac/static
          cp -R templates vote_system_mac/templates
          echo ADMIN_PASSWORD=changeme123 > vote_system_mac/.env
          cp -R venv vote_system_mac/venv

          mkdir -p vote_system_mac/VoteSystemLauncher.app/Contents/MacOS
          echo '#!/bin/bash' > vote_system_mac/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher
          echo 'cd "$(dirname "$0")/../../"' >> vote_system_mac/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher
          echo 'source venv/bin/activate' >> vote_system_mac/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher
          echo 'python3 launcher.py' >> vote_system_mac/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher
          chmod +x vote_system_mac/VoteSystemLauncher.app/Contents/MacOS/VoteSystemLauncher

          cat > vote_system_mac/VoteSystemLauncher.app/Contents/Info.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleName</key>
              <string>VoteSystemLauncher</string>
              <key>CFBundleExecutable</key>
              <string>VoteSystemLauncher</string>
              <key>CFBundleIdentifier</key>
              <string>com.example.votesystem</string>
              <key>CFBundleVersion</key>
              <string>1.0</string>
          </dict>
          </plist>
          EOF

          cd vote_system_mac
          zip -r ../vote_system_mac.zip .

      - name: Upload Release Asset (macOS)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.tag_name }}
          name: vote_system_mac.zip
          files: vote_system_mac.zip
